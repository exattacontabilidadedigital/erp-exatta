const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente do Supabase n√£o encontradas')
  console.log('Verifique se o arquivo .env.local existe e cont√©m:')
  console.log('NEXT_PUBLIC_SUPABASE_URL=...')
  console.log('NEXT_PUBLIC_SUPABASE_ANON_KEY=...')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function updateLancamentosSchema() {
  console.log('üîÑ Atualizando schema da tabela lancamentos...')
  console.log('üìù Este script adicionar√° as seguintes colunas:')
  console.log('  - juros DECIMAL(15,2) DEFAULT 0')
  console.log('  - multa DECIMAL(15,2) DEFAULT 0') 
  console.log('  - desconto DECIMAL(15,2) DEFAULT 0')
  console.log('  - valor_pago DECIMAL(15,2) DEFAULT 0')
  console.log('  - recebimento_realizado BOOLEAN DEFAULT false')
  console.log('')
  
  try {
    // Primeiro, vamos verificar se as colunas j√° existem
    console.log('üîç Verificando colunas existentes...')
    
    const { data: existingColumns, error: checkError } = await supabase
      .from('lancamentos')
      .select('*')
      .limit(1)
    
    if (checkError) {
      console.error('‚ùå Erro ao verificar tabela lancamentos:', checkError)
      return
    }
    
    console.log('‚úÖ Tabela lancamentos acess√≠vel')
    
    // Verificar se as colunas j√° existem tentando fazer uma consulta
    const testColumns = ['juros', 'multa', 'desconto', 'valor_pago', 'recebimento_realizado']
    const existingFields = []
    
    for (const column of testColumns) {
      try {
        const { error } = await supabase
          .from('lancamentos')
          .select(column)
          .limit(1)
        
        if (!error) {
          existingFields.push(column)
        }
      } catch (e) {
        // Coluna n√£o existe
      }
    }
    
    if (existingFields.length === testColumns.length) {
      console.log('‚úÖ Todas as colunas j√° existem!')
      console.log('üìã Colunas encontradas:', existingFields.join(', '))
      return
    }
    
    console.log('‚ö†Ô∏è  Algumas colunas n√£o existem ainda.')
    console.log('üìã Colunas existentes:', existingFields.join(', ') || 'Nenhuma')
    console.log('üìã Colunas faltando:', testColumns.filter(col => !existingFields.includes(col)).join(', '))
    console.log('')
    console.log('üí° Para adicionar as colunas faltantes, execute o seguinte SQL no painel do Supabase:')
    console.log('')
    console.log('ALTER TABLE lancamentos')
    console.log('ADD COLUMN IF NOT EXISTS juros DECIMAL(15,2) DEFAULT 0,')
    console.log('ADD COLUMN IF NOT EXISTS multa DECIMAL(15,2) DEFAULT 0,')
    console.log('ADD COLUMN IF NOT EXISTS desconto DECIMAL(15,2) DEFAULT 0,')
    console.log('ADD COLUMN IF NOT EXISTS valor_pago DECIMAL(15,2) DEFAULT 0,')
    console.log('ADD COLUMN IF NOT EXISTS recebimento_realizado BOOLEAN DEFAULT false;')
    console.log('')
    console.log('üîó Acesse: https://supabase.com/dashboard/project/[SEU_PROJECT]/sql')
    
  } catch (error) {
    console.error('‚ùå Erro inesperado:', error)
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  updateLancamentosSchema()
}

module.exports = { updateLancamentosSchema }
