// Teste do tratamento de erro melhorado
console.log('üß™ Testando tratamento de erro melhorado...\n');

// Simulando diferentes cen√°rios de erro HTTP
const testErrorHandling = (status, errorData) => {
  console.log(`üìã Testando erro HTTP ${status}:`);
  
  let userFriendlyMessage = errorData?.error || 'Erro desconhecido';
  
  if (status === 409) {
    userFriendlyMessage = 'Este lan√ßamento j√° est√° conciliado com outra transa√ß√£o. Desvincul√°-lo primeiro se necess√°rio.';
  } else if (status === 400) {
    userFriendlyMessage = 'Dados inv√°lidos para concilia√ß√£o. Verifique as informa√ß√µes selecionadas.';
  } else if (status === 404) {
    userFriendlyMessage = 'Transa√ß√£o n√£o encontrada. Ela pode ter sido removida ou modificada.';
  } else if (status === 500) {
    userFriendlyMessage = 'Erro interno do servidor. Tente novamente em alguns instantes.';
  }
  
  console.log('   Mensagem amig√°vel:', userFriendlyMessage);
  console.log('   Dados originais:', errorData);
  console.log('');
};

// Casos de teste
testErrorHandling(409, { 
  error: 'Lan√ßamento do sistema j√° est√° conciliado com outra transa√ß√£o',
  existing_matches: ['some-id']
});

testErrorHandling(400, { 
  error: 'Dados de entrada inv√°lidos'
});

testErrorHandling(404, { 
  error: 'Transa√ß√£o n√£o encontrada'
});

testErrorHandling(500, { 
  error: 'Erro interno do servidor'
});

testErrorHandling(422, { 
  error: 'Erro espec√≠fico n√£o mapeado'
});

console.log('‚úÖ Agora os erros ter√£o mensagens mais amig√°veis!');
console.log('üéØ Especialmente o erro 409 (conflito) que estava causando problemas.');
